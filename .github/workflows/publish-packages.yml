name: Check Version Bump and Publish Packages

on:
  push:
    branches:
      - master  # Trigger only on pushes to the main branch
    paths:
      - "packages/**/package.json"  # Watch for package.json changes

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"  # Use the appropriate Node.js version

      - name: Authenticate with npm
        run: |
          # Authenticate with npm registry
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Authenticate with GitHub Package Registry
        run: |
          # Authenticate with GitHub Package Registry
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc

      - name: Check for Version Bumps
        id: check_versions
        run: |
          packages_to_publish=""
          # Get the base commit (previous commit or merge base)
          if git log --oneline HEAD^1; then
            previous_commit=$(git rev-parse HEAD^1)
          else
            previous_commit=$(git merge-base HEAD HEAD~1)
          fi

          # Loop through changed package.json files
          for package_json in $(git diff --name-only $previous_commit HEAD -- packages/**/package.json); do
            echo "Checking $package_json"
            
            current_version=$(jq -r .version $package_json)
            git show $previous_commit:$package_json > previous_package.json
            previous_version=$(jq -r .version previous_package.json)

            # Check if version is bumped
            if [ "$current_version" != "$previous_version" ]; then
              echo "Version bumped in $package_json from $previous_version to $current_version"
              packages_to_publish="$packages_to_publish $(dirname $package_json)"
            else
              echo "Error: Version in $package_json was not bumped."
              exit 1
            fi
          done

          echo "packages_to_publish=$packages_to_publish" >> $GITHUB_ENV

      - name: Publish Packages to npm and GitHub Package Registry
        if: steps.check_versions.outputs.packages_to_publish != ''
        run: |
          for package_dir in $packages_to_publish; do
            echo "Publishing package in $package_dir"
            
            # Navigate to the package's directory
            cd $package_dir
            
            # Publish to npm registry
            echo "Publishing to npm..."
            npm publish --access public
            
            # Publish to GitHub Package Registry
            echo "Publishing to GitHub Package Registry..."
            npm publish --registry=https://npm.pkg.github.com --access public
            
            # Return to the root directory
            cd -
          done

      - name: No Version Bumps Detected
        if: steps.check_versions.outputs.packages_to_publish == ''
        run: |
          echo "No packages have version bumps. Nothing to publish."
